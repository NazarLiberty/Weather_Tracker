{"version":3,"sources":["components/Forecast.js","components/Autoselect.js","components/Current.js","components/ForecastDaily.js","components/Content.js","App.js","index.js"],"names":["Forecast","props","week","elClass","status","activeTab","daily","map","e","i","loader","push","ForecastWeek","day","setTime","dt","slice","temp","Math","round","icon","weather","key","className","current","ForecastToday","src","alt","LocationSearchInput","handleChange","address","setState","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","setLoader","fetch","originUrl","lat","lng","apiKey","respone","json","respData","action","catch","error","console","state","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","style","backgroundColor","cursor","padding","borderRadius","description","React","Component","CurrentTime","useState","Date","now","unix","setUnix","setInterval","Tabs","actionChangeTab","hours","minutes","seconds","fullDate","CurrentInfoItem","condition","humidity","text","clouds","feel","sunset","data","changeTab","tabWeek","tabHours","onClick","ForecastDaily","hoursCollection","ForecastHourly","time","Wrapper","setData","setClouds","setHumidity","setFeel","setSunset","hourly","setHourly","setCurrent","setAddress","setActiveTab","log","feels_like","a","getDay","month","getMonth","dayNumber","getDate","year","getFullYear","getHours","getMinutes","getSeconds","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e746ed81.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Forecast.scss'\r\nimport '../styles/Content.scss'\r\nimport { setTime } from './Content'\r\n\r\nexport default function Forecast(props) {\r\n    let week = [];\r\n    let elClass = 'forecast'\r\n    if (props.status) {\r\n        if (!props.activeTab)\r\n            elClass += ' forecast--active'\r\n        props.status.daily.map((e, i) => {\r\n            if (!props.loader) {\r\n                if (i > 0 && i < 7) week.push(\r\n                    <ForecastWeek\r\n                        loader={props.loader}\r\n                        day={setTime(e.dt).day.slice(0, 3)}\r\n                        temp={Math.round(e.temp.day - 273.15)}\r\n                        icon={e.weather[0].icon}\r\n                        key={i}\r\n                    />)\r\n                else return null\r\n            }\r\n            else return null\r\n        })\r\n\r\n    }\r\n\r\n    return <div className={elClass}>\r\n        {props.current &&\r\n            <ForecastToday\r\n                icon={props.current.weather[0].icon}\r\n                temp={Math.round(props.current.temp - 273.15)}\r\n            />}\r\n        {week}\r\n    </div>\r\n}\r\nfunction ForecastToday(props) {\r\n    return <div className=\"forecast__today\">\r\n        <div className=\"forecast__icon forecast__icon-b--today\">\r\n            <img src={\"https://openweathermap.org/img/wn/\" + props.icon + \"@2x.png\"} className=\"forecast__icon\" alt=\"weather\" />\r\n        </div>\r\n        <div className=\"forecast__today-group\">\r\n            <div className=\"forecast__day forecast__day--today\">\r\n                Today\r\n        </div>\r\n            <div className=\"forecast__temp forecast__temp--today\">\r\n                {props.temp}°\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nfunction ForecastWeek(props) {\r\n    return <>\r\n        {!props.loader &&\r\n            <div className=\"forecast__week-item animate__animated  animate__backInDown\">\r\n                <div className=\"forecast__day\">\r\n                    {props.day}\r\n                </div>\r\n                <div className=\"forecast__icon-b\">\r\n                    <img src={\"http://openweathermap.org/img/wn/\" + props.icon + \"@2x.png\"} className=\"forecast__icon\" alt=\"weather\" />\r\n                </div>\r\n                <div className=\"forecast__temp\">\r\n                    {props.temp}°\r\n        </div>\r\n            </div>\r\n        }\r\n    </>\r\n}","import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from 'react-places-autocomplete';\r\nimport \"../styles/Autoselect.scss\";\r\nimport { apiKey, originUrl } from '../App'\r\n\r\nexport default class LocationSearchInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { address: '' };\r\n    }\r\n\r\n    handleChange = address => {\r\n        this.setState({ address });\r\n    };\r\n\r\n    handleSelect = address => {\r\n\r\n        geocodeByAddress(address)\r\n            .then(results => getLatLng(results[0]))\r\n            .then((latLng) => {\r\n                this.props.setLoader()\r\n                this.setState({ address });\r\n                fetch(originUrl + \"lat=\" + latLng.lat + \"&lon=\" + latLng.lng + apiKey)\r\n                    .then((respone) => {\r\n                        return respone.json()\r\n                    })\r\n                    .then((respData) => {\r\n                        this.props.action(respData, address)\r\n                    })\r\n\r\n            })\r\n\r\n            .catch(error => console.error('Error', error));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PlacesAutocomplete\r\n                value={this.state.address}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n\r\n            >\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <input\r\n                            {...getInputProps({\r\n\r\n                                placeholder: 'Search Places ...',\r\n                                className: 'location-search-input current__input',\r\n                            })}\r\n                        />\r\n                        <div className=\"autocomplete-dropdown-container current__dropdown\">\r\n                            {loading && <div className=\"current__loading\">\r\n                                Loading...\r\n                                <div className=\"current__icon-b \">\r\n                                    <img src='./loader.png' className=\"current__icon animate__animated  animate__rotateOut\" alt=\"weather option\" />\r\n                                </div>\r\n                            </div>}\r\n                            {suggestions.map(suggestion => {\r\n                                const className = suggestion.active\r\n                                    ? 'suggestion-item--active'\r\n                                    : 'suggestion-item';\r\n                                // inline style for demonstration purpose\r\n                                const style = suggestion.active\r\n                                    ? {\r\n                                        backgroundColor: '#fafafa', cursor: 'pointer', padding: '5px 10px', borderRadius: \"10px\"\r\n                                    }\r\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer', padding: '5px 10px', borderRadius: \"10px\" };\r\n                                return (\r\n                                    <div\r\n                                        {...getSuggestionItemProps(suggestion, {\r\n                                            className,\r\n                                            style,\r\n                                        })}\r\n                                    >\r\n                                        <span>{suggestion.description}</span>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        );\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport '../styles/Current.scss'\r\nimport LocationSearchInput from './Autoselect';\r\nimport { setTime } from './Content'\r\nimport '../styles/Content.scss'\r\n\r\nexport default function CurrentTime(props) {\r\n    const [unix, setUnix] = useState(Date.now() / 1000)\r\n    function actionChangeTab() {\r\n        props.actionChangeTab()\r\n    }\r\n    setInterval(function () {\r\n        setUnix(Date.now() / 1000)\r\n    }, 1000)\r\n    function getData(data, address) {\r\n        props.action(data, address)\r\n    }\r\n    return <div className=\"current sunny-bg\">\r\n        {props.status && <Tabs\r\n            activeTab={props.activeTab}\r\n            action={actionChangeTab}\r\n        />}\r\n        <div className=\"current__info-container\">\r\n            <div className=\"current__time\">\r\n                <p className=\"current__timestamp\"> {setTime(unix).hours}:{setTime(unix).minutes}<span className=\"current__seconds\">:{setTime(unix).seconds} </span></p>\r\n                <p className=\"current__day\">\r\n                    {setTime(Date.now() / 1000).fullDate}\r\n                </p>\r\n            </div>\r\n            <div className=\"current__info \">\r\n                {props.loader && <div className=\"current__loading\">\r\n                    Loading...\r\n                                <div className=\"current__icon-b \">\r\n                        <img src='./loader.png' className=\"current__icon animate__animated  animate__rotateOut\" alt=\"weather option\" />\r\n                    </div>\r\n                </div>\r\n                }\r\n                {!props.loader && props.status &&\r\n                    <>\r\n                        <CurrentInfoItem src=\"./humidity.png\" condition={props.humidity + \"%\"} text=\"humidity is\" />\r\n                        <CurrentInfoItem src=\"./cloud.png\" condition={props.clouds + \"%\"} text=\"clouds is \" />\r\n                        <CurrentInfoItem src=\"./feeling.png\" condition={props.feel + \" C\"} text=\"feels like \" />\r\n                        <CurrentInfoItem src=\"./sunset.png\" condition={props.sunset} text=\"sunset is\" />\r\n                    </>}\r\n            </div>\r\n        </div>\r\n        <div className=\"current__search\">\r\n            <LocationSearchInput action={getData} setLoader={props.setLoader} />\r\n            <div className=\"current__address\">\r\n                {props.address}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\nfunction CurrentInfoItem(props) {\r\n    return <div className=\"current__item animate__animated  animate__bounceInLeft\">\r\n        <div className=\"current__icon-b \">\r\n            <img src={props.src} className=\"current__icon\" alt=\"weather option\" />\r\n        </div>\r\n        <div className=\"current__text\"> {props.text} {props.condition} </div>\r\n    </div>\r\n}\r\nfunction Tabs(props) {\r\n    function changeTab() {\r\n        props.action()\r\n    }\r\n    let tabWeek = \"tabs__item\";\r\n    let tabHours = \"tabs__item\";\r\n    if (props.activeTab) tabHours += \" tabs__item--active\"\r\n    else tabWeek += \" tabs__item--active\"\r\n    return <div className=\"tabs sunny animate__animated  animate__bounceInRight\">\r\n        <div className={tabWeek} onClick={changeTab}>\r\n            Week\r\n    </div>\r\n        <div className={tabHours} onClick={changeTab}>\r\n            12 Hours\r\n    </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport '../styles/ForecastDaily.scss'\r\nimport '../styles/Content.scss'\r\nimport { setTime } from './Content'\r\n\r\nexport default function ForecastDaily(props) {\r\n    let elClass = \"forecast-daily\"\r\n    if (props.activeTab) elClass += \" forecast-daily--active\"\r\n    let hoursCollection = []\r\n    for (let i = 1; i <= 12; i++) {\r\n        hoursCollection.push(<ForecastHourly\r\n            time={setTime(props.hours[i].dt).hours + \":00\"}\r\n            key={i}\r\n            temp={Math.round(props.hours[i].temp - 273.15)}\r\n        />)\r\n    }\r\n\r\n    return <div className={elClass + \" sunny\"}>\r\n        {hoursCollection}\r\n    </div>\r\n}\r\nfunction ForecastHourly(props) {\r\n    return <div className=\"forecast-daily__hour\">\r\n        <div className=\"forecast-daily__time\">{props.time}</div>\r\n        <div className=\"forecast-daily__icon-b\">\r\n            <img src=\"https://openweathermap.org/img/wn/10d.png\" alt=\"weather\" className=\"forecast-daily__icon\" />\r\n        </div>\r\n        <div className=\"forecast-daily__temp\">{props.temp}°</div>\r\n\r\n    </div>\r\n}","import React, { useState } from 'react';\r\nimport '../styles/Content.scss'\r\nimport Foreacast from './Forecast'\r\nimport CurrentTime from './Current'\r\nimport ForecastDaily from './ForecastDaily'\r\n\r\nexport default function Wrapper(props) {\r\n    const [data, setData] = useState(null)\r\n    const [loader, setLoader] = useState(false)\r\n    const [clouds, setClouds] = useState(null)\r\n    const [humidity, setHumidity] = useState(null)\r\n    const [feel, setFeel] = useState(null)\r\n    const [sunset, setSunset] = useState(null)\r\n    const [hourly, setHourly] = useState(null)\r\n    const [current, setCurrent] = useState(null)\r\n    const [address, setAddress] = useState('')\r\n    const [activeTab, setActiveTab] = useState(false)\r\n    function actionGetData(data, address) {\r\n        setLoader(false)\r\n        setData(data)\r\n        console.log(data)\r\n        setClouds(data.current.clouds)\r\n        setHumidity(data.current.humidity)\r\n        setSunset(data.current.sunset)\r\n        setFeel(data.current.feels_like)\r\n        setHourly(data.hourly)\r\n        setCurrent(data.current)\r\n        setAddress(address)\r\n\r\n    }\r\n    function actionLoader() {\r\n        setLoader(true)\r\n    }\r\n    function actionChangeTab() {\r\n        setActiveTab(!activeTab)\r\n    }\r\n    return <div className=\"wrapper\">\r\n        <div className=\"weather\">\r\n\r\n            <CurrentTime\r\n                actionChangeTab={actionChangeTab}\r\n                activeTab={activeTab}\r\n                address={address}\r\n                setLoader={actionLoader}\r\n                loader={loader}\r\n                status={data}\r\n                action={actionGetData}\r\n                clouds={clouds}\r\n                humidity={humidity}\r\n                sunset={setTime(sunset).hours + \":\" + setTime(sunset).minutes} feel={Math.round(feel - 273.15)}\r\n            />\r\n            <Foreacast\r\n                activeTab={activeTab}\r\n                loader={loader}\r\n                status={data}\r\n                current={current} />\r\n            {hourly && <ForecastDaily\r\n                activeTab={activeTab}\r\n                hours={hourly}\r\n            />}\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport function setTime(unix) {\r\n    let timestamp = unix;\r\n    let a = new Date(timestamp * 1000);\r\n    let daysList = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let monthList = ['January', 'February', 'March', 'April', 'May', 'June', 'Jule', 'August', 'September', 'October', 'November', 'December']\r\n    let day = daysList[a.getDay()]\r\n    let month = monthList[a.getMonth()]\r\n    let dayNumber = a.getDate()\r\n    let year = a.getFullYear()\r\n    let fullDate = day + \", \" + dayNumber + \" \" + month + \" \" + year;\r\n    let hours = a.getHours()\r\n    let minutes = a.getMinutes()\r\n    let seconds = a.getSeconds()\r\n    if (hours < 10) {\r\n        hours = '0' + hours\r\n    }\r\n    if (minutes < 10) {\r\n        minutes = '0' + minutes\r\n    }\r\n    if (seconds < 10) {\r\n        seconds = '0' + seconds\r\n    }\r\n    return {\r\n        seconds: seconds,\r\n        minutes: minutes,\r\n        hours: hours,\r\n        day: day,\r\n        month: month,\r\n        year: year,\r\n        dayNumber: dayNumber,\r\n        fullDate: fullDate\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './styles/App.scss';\r\nimport Wrapper from './components/Content'\r\n\r\nexport let apiKey = '&appid=ae64f4f04a5e48e2fc0edabf290d80d0'\r\nexport let originUrl = 'https://api.openweathermap.org/data/2.5/onecall?'\r\n\r\nexport default function App() {\r\n    return <>\r\n        <Wrapper />\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}