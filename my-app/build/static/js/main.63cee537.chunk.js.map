{"version":3,"sources":["components/Autoselect.js","components/Forecast.js","components/Content.js","App.js","index.js"],"names":["LocationSearchInput","props","handleChange","address","setState","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","setLoader","fetch","originUrl","lat","lng","apiKey","respone","json","respData","action","catch","error","console","state","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","src","alt","map","suggestion","active","style","backgroundColor","cursor","padding","borderRadius","description","React","Component","Forecast","week","elClass","dataDaily","e","i","loader","push","ForecastWeek","day","setTime","dt","slice","temp","Math","round","icon","weather","key","current","ForecastToday","Wrapper","useState","data","setData","clouds","setClouds","humidity","setHumidity","feel","setFeel","sunset","setSunset","daily","setDaily","setCurrent","setAddress","CurrentTime","status","log","feels_like","hours","minutes","unix","a","Date","getDay","month","getMonth","dayNumber","getDate","year","getFullYear","fullDate","getHours","getMinutes","seconds","getSeconds","now","setUnix","setInterval","CurrentInfoItem","condition","text","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUASqBA,G,wDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAED,aAND,EASnBE,aAAe,SAAAF,GAEXG,2BAAiBH,GACZI,MAAK,SAAAC,GAAO,OAAIC,oBAAUD,EAAQ,OAClCD,MAAK,SAACG,GACH,EAAKT,MAAMU,YACX,EAAKP,SAAS,CAAED,YAChBS,MAAMC,EAAY,OAASH,EAAOI,IAAM,QAAUJ,EAAOK,IAAMC,GAC1DT,MAAK,SAACU,GACH,OAAOA,EAAQC,UAElBX,MAAK,SAACY,GACH,EAAKlB,MAAMmB,OAAOD,EAAUhB,SAKvCkB,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,OAxB3C,EAAKE,MAAQ,CAAErB,QAAS,IAFT,E,qDA8Bf,OACI,kBAAC,IAAD,CACIsB,MAAOC,KAAKF,MAAMrB,QAClBwB,SAAUD,KAAKxB,aACf0B,SAAUF,KAAKrB,eAGd,gBAAGwB,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,uBAAwBC,EAAvD,EAAuDA,QAAvD,OACG,6BACI,0BACQH,EAAc,CAEdI,YAAa,oBACbC,UAAW,0CAGnB,yBAAKA,UAAU,qDACVF,GAAW,yBAAKE,UAAU,oBAAf,aAER,yBAAKA,UAAU,oBACX,yBAAKC,IAAI,eAAeD,UAAU,sDAAsDE,IAAI,qBAGnGN,EAAYO,KAAI,SAAAC,GACb,IAAMJ,EAAYI,EAAWC,OACvB,0BACA,kBAEAC,EAAQF,EAAWC,OACnB,CACEE,gBAAiB,UAAWC,OAAQ,UAAWC,QAAS,WAAYC,aAAc,QAEpF,CAAEH,gBAAiB,UAAWC,OAAQ,UAAWC,QAAS,WAAYC,aAAc,QAC1F,OACI,wBACQb,EAAuBO,EAAY,CACnCJ,YACAM,UAGJ,8BAAOF,EAAWO,0B,GAvETC,IAAMC,Y,MCLxC,SAASC,EAAS/C,GAC7B,IAAIgD,EAAO,GACPC,EAAU,WAoBd,OAnBIjD,EAAMkD,YACND,GAAW,oBACXjD,EAAMkD,UAAUd,KAAI,SAACe,EAAGC,GACpB,OAAKpD,EAAMqD,OAWC,KAVJD,EAAI,GAAKA,EAAI,OAAGJ,EAAKM,KACrB,kBAACC,EAAD,CACIF,OAAQrD,EAAMqD,OACdG,IAAKC,EAAQN,EAAEO,IAAIF,IAAIG,MAAM,EAAG,GAChCC,KAAMC,KAAKC,MAAMX,EAAES,KAAKJ,IAAM,QAC9BO,KAAMZ,EAAEa,QAAQ,GAAGD,KACnBE,IAAKb,KAED,SAOjB,yBAAKnB,UAAWgB,GAClBjD,EAAMkE,SACH,kBAACC,EAAD,CACIJ,KAAM/D,EAAMkE,QAAQF,QAAQ,GAAGD,KAC/BH,KAAMC,KAAKC,MAAM9D,EAAMkE,QAAQN,KAAO,UAE7CZ,GAGT,SAASmB,EAAcnE,GACnB,OAAO,yBAAKiC,UAAU,mBAClB,yBAAKA,UAAU,0CACX,yBAAKC,IAAK,oCAAsClC,EAAM+D,KAAO,UAAW9B,UAAU,iBAAiBE,IAAI,aAE3G,yBAAKF,UAAU,yBACX,yBAAKA,UAAU,sCAAf,SAGA,yBAAKA,UAAU,wCACVjC,EAAM4D,KADX,UAMZ,SAASL,EAAavD,GAClB,OAAO,qCACDA,EAAMqD,QACJ,yBAAKpB,UAAU,8DACX,yBAAKA,UAAU,iBACVjC,EAAMwD,KAEX,yBAAKvB,UAAU,oBACX,yBAAKC,IAAK,oCAAsClC,EAAM+D,KAAO,UAAW9B,UAAU,iBAAiBE,IAAI,aAE3G,yBAAKF,UAAU,kBACVjC,EAAM4D,KADX,UCvDD,SAASQ,EAAQpE,GAAQ,IAAD,EACXqE,mBAAS,MADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAEPF,oBAAS,GAFF,mBAE5BhB,EAF4B,KAEpB3C,EAFoB,OAGP2D,mBAAS,MAHF,mBAG5BG,EAH4B,KAGpBC,EAHoB,OAIHJ,mBAAS,MAJN,mBAI5BK,EAJ4B,KAIlBC,EAJkB,OAKXN,mBAAS,MALE,mBAK5BO,EAL4B,KAKtBC,EALsB,OAMPR,mBAAS,MANF,mBAM5BS,EAN4B,KAMpBC,EANoB,OAOTV,mBAAS,MAPA,mBAO5BW,EAP4B,KAOrBC,EAPqB,OAQLZ,mBAAS,MARJ,mBAQ5BH,EAR4B,KAQnBgB,EARmB,OASLb,mBAAS,IATJ,mBAS5BnE,EAT4B,KASnBiF,EATmB,KA0BnC,OAAO,yBAAKlD,UAAU,WAClB,yBAAKA,UAAU,WACX,kBAACmD,EAAD,CACIlF,QAASA,EACTQ,UAPZ,WACIA,GAAU,IAOF2C,OAAQA,EACRgC,OAAQf,EACRnD,OAvBZ,SAAuBmD,EAAMpE,GACzBQ,GAAU,GACV6D,EAAQD,GACRhD,QAAQgE,IAAIhB,GACZG,EAAUH,EAAKJ,QAAQM,QACvBG,EAAYL,EAAKJ,QAAQQ,UACzBK,EAAUT,EAAKJ,QAAQY,QACvBD,EAAQP,EAAKJ,QAAQqB,YACrBN,EAASX,EAAKU,OACdE,EAAWZ,EAAKJ,SAChBiB,EAAWjF,IAcHsE,OAAQA,EACRE,SAAUA,EACVI,OAAQrB,EAAQqB,GAAQU,MAAQ,IAAM/B,EAAQqB,GAAQW,QAASb,KAAMf,KAAKC,MAAMc,EAAO,UAE3F,kBAAC,EAAD,CACIvB,OAAQA,EACRH,UAAW8B,EACXK,OAAQf,EACRJ,QAASA,MAOlB,SAAST,EAAQiC,GACpB,IACIC,EAAI,IAAIC,KAAiB,IADbF,GAIZlC,EAFW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DmC,EAAEE,UACjBC,EAFY,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEzGH,EAAEI,YACpBC,EAAYL,EAAEM,UACdC,EAAOP,EAAEQ,cACTC,EAAW5C,EAAM,KAAOwC,EAAY,IAAMF,EAAQ,IAAMI,EACxDV,EAAQG,EAAEU,WACVZ,EAAUE,EAAEW,aACZC,EAAUZ,EAAEa,aAUhB,OATIhB,EAAQ,KACRA,EAAQ,IAAMA,GAEdC,EAAU,KACVA,EAAU,IAAMA,GAEhBc,EAAU,KACVA,EAAU,IAAMA,GAEb,CACHA,QAASA,EACTd,QAASA,EACTD,MAAOA,EACPhC,IAAKA,EACLsC,MAAOA,EACPI,KAAMA,EACNF,UAAWA,EACXI,SAAUA,GAIlB,SAAShB,EAAYpF,GAAQ,IAAD,EACAqE,mBAASuB,KAAKa,MAAQ,KADtB,mBACjBf,EADiB,KACXgB,EADW,KAQxB,OANAC,aAAY,WACRD,EAAQd,KAAKa,MAAQ,OACtB,KAII,yBAAKxE,UAAU,WAClB,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,sBAAb,IAAoCwB,EAAQiC,GAAMF,MAAlD,IAA0D/B,EAAQiC,GAAMD,QAAQ,0BAAMxD,UAAU,oBAAhB,IAAqCwB,EAAQiC,GAAMa,QAAnD,MAChF,uBAAGtE,UAAU,gBACRwB,EAAQmC,KAAKa,MAAQ,KAAML,WAGpC,yBAAKnE,UAAU,kBACVjC,EAAMqD,QAAU,yBAAKpB,UAAU,oBAAf,aAED,yBAAKA,UAAU,oBACvB,yBAAKC,IAAI,eAAeD,UAAU,sDAAsDE,IAAI,sBAIlGnC,EAAMqD,QAAUrD,EAAMqF,QACpB,oCACI,kBAACuB,EAAD,CAAiB1E,IAAI,iBAAiB2E,UAAW7G,EAAM0E,SAAW,IAAKoC,KAAK,gBAC5E,kBAACF,EAAD,CAAiB1E,IAAI,cAAc2E,UAAW7G,EAAMwE,OAAS,IAAKsC,KAAK,eACvE,kBAACF,EAAD,CAAiB1E,IAAI,gBAAgB2E,UAAW7G,EAAM4E,KAAO,KAAMkC,KAAK,gBACxE,kBAACF,EAAD,CAAiB1E,IAAI,eAAe2E,UAAW7G,EAAM8E,OAAQgC,KAAK,iBAIlF,yBAAK7E,UAAU,mBACX,kBAAC,EAAD,CAAqBd,OA7B7B,SAAiBmD,EAAMpE,GACnBF,EAAMmB,OAAOmD,EAAMpE,IA4BuBQ,UAAWV,EAAMU,YACvD,yBAAKuB,UAAU,oBACVjC,EAAME,WAMvB,SAAS0G,EAAgB5G,GACrB,OAAO,yBAAKiC,UAAU,0DAClB,yBAAKA,UAAU,oBACX,yBAAKC,IAAKlC,EAAMkC,IAAKD,UAAU,gBAAgBE,IAAI,oBAEvD,yBAAKF,UAAU,iBAAf,IAAiCjC,EAAM8G,KAAvC,IAA8C9G,EAAM6G,UAApD,MCnID,IAAI9F,EAAS,0CACTH,EAAY,mDAER,SAASmG,IAEpB,OAAO,oCACH,kBAAC3C,EAAD,OCLR4C,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.63cee537.chunk.js","sourcesContent":["import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from 'react-places-autocomplete';\r\nimport \"../styles/Autoselect.scss\";\r\nimport { apiKey, originUrl } from '../App'\r\n\r\nexport default class LocationSearchInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { address: '' };\r\n    }\r\n\r\n    handleChange = address => {\r\n        this.setState({ address });\r\n    };\r\n\r\n    handleSelect = address => {\r\n\r\n        geocodeByAddress(address)\r\n            .then(results => getLatLng(results[0]))\r\n            .then((latLng) => {\r\n                this.props.setLoader()\r\n                this.setState({ address });\r\n                fetch(originUrl + \"lat=\" + latLng.lat + \"&lon=\" + latLng.lng + apiKey)\r\n                    .then((respone) => {\r\n                        return respone.json()\r\n                    })\r\n                    .then((respData) => {\r\n                        this.props.action(respData, address)\r\n                    })\r\n\r\n            })\r\n\r\n            .catch(error => console.error('Error', error));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PlacesAutocomplete\r\n                value={this.state.address}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n\r\n            >\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <input\r\n                            {...getInputProps({\r\n\r\n                                placeholder: 'Search Places ...',\r\n                                className: 'location-search-input current__input',\r\n                            })}\r\n                        />\r\n                        <div className=\"autocomplete-dropdown-container current__dropdown\">\r\n                            {loading && <div className=\"current__loading\">\r\n                                Loading...\r\n                                <div className=\"current__icon-b \">\r\n                                    <img src='./loader.png' className=\"current__icon animate__animated  animate__rotateOut\" alt=\"weather option\" />\r\n                                </div>\r\n                            </div>}\r\n                            {suggestions.map(suggestion => {\r\n                                const className = suggestion.active\r\n                                    ? 'suggestion-item--active'\r\n                                    : 'suggestion-item';\r\n                                // inline style for demonstration purpose\r\n                                const style = suggestion.active\r\n                                    ? {\r\n                                        backgroundColor: '#fafafa', cursor: 'pointer', padding: '5px 10px', borderRadius: \"10px\"\r\n                                    }\r\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer', padding: '5px 10px', borderRadius: \"10px\" };\r\n                                return (\r\n                                    <div\r\n                                        {...getSuggestionItemProps(suggestion, {\r\n                                            className,\r\n                                            style,\r\n                                        })}\r\n                                    >\r\n                                        <span>{suggestion.description}</span>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/Forecast.scss'\r\nimport { setTime } from './Content'\r\n\r\nexport default function Forecast(props) {\r\n    let week = [];\r\n    let elClass = 'forecast'\r\n    if (props.dataDaily) {\r\n        elClass += ' forecast--active'\r\n        props.dataDaily.map((e, i) => {\r\n            if (!props.loader) {\r\n                if (i > 0 && i < 7) week.push(\r\n                    <ForecastWeek\r\n                        loader={props.loader}\r\n                        day={setTime(e.dt).day.slice(0, 3)}\r\n                        temp={Math.round(e.temp.day - 273.15)}\r\n                        icon={e.weather[0].icon}\r\n                        key={i}\r\n                    />)\r\n                else return null\r\n            }\r\n            else return null\r\n        })\r\n\r\n    }\r\n\r\n    return <div className={elClass}>\r\n        {props.current &&\r\n            <ForecastToday\r\n                icon={props.current.weather[0].icon}\r\n                temp={Math.round(props.current.temp - 273.15)}\r\n            />}\r\n        {week}\r\n    </div>\r\n}\r\nfunction ForecastToday(props) {\r\n    return <div className=\"forecast__today\">\r\n        <div className=\"forecast__icon forecast__icon-b--today\">\r\n            <img src={\"http://openweathermap.org/img/wn/\" + props.icon + \"@2x.png\"} className=\"forecast__icon\" alt=\"weather\" />\r\n        </div>\r\n        <div className=\"forecast__today-group\">\r\n            <div className=\"forecast__day forecast__day--today\">\r\n                Today\r\n        </div>\r\n            <div className=\"forecast__temp forecast__temp--today\">\r\n                {props.temp}°\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nfunction ForecastWeek(props) {\r\n    return <>\r\n        {!props.loader &&\r\n            <div className=\"forecast__week-item animate__animated  animate__backInDown\">\r\n                <div className=\"forecast__day\">\r\n                    {props.day}\r\n                </div>\r\n                <div className=\"forecast__icon-b\">\r\n                    <img src={\"http://openweathermap.org/img/wn/\" + props.icon + \"@2x.png\"} className=\"forecast__icon\" alt=\"weather\" />\r\n                </div>\r\n                <div className=\"forecast__temp\">\r\n                    {props.temp}°\r\n        </div>\r\n            </div>\r\n        }\r\n    </>\r\n}","import React, { useState } from 'react';\r\nimport '../styles/Content.scss'\r\nimport LocationSearchInput from './Autoselect';\r\nimport Foreacast from './Forecast'\r\n\r\nexport default function Wrapper(props) {\r\n    const [data, setData] = useState(null)\r\n    const [loader, setLoader] = useState(false)\r\n    const [clouds, setClouds] = useState(null)\r\n    const [humidity, setHumidity] = useState(null)\r\n    const [feel, setFeel] = useState(null)\r\n    const [sunset, setSunset] = useState(null)\r\n    const [daily, setDaily] = useState(null)\r\n    const [current, setCurrent] = useState(null)\r\n    const [address, setAddress] = useState('')\r\n    function actionGetData(data, address) {\r\n        setLoader(false)\r\n        setData(data)\r\n        console.log(data)\r\n        setClouds(data.current.clouds)\r\n        setHumidity(data.current.humidity)\r\n        setSunset(data.current.sunset)\r\n        setFeel(data.current.feels_like)\r\n        setDaily(data.daily)\r\n        setCurrent(data.current)\r\n        setAddress(address)\r\n\r\n    }\r\n    function actionLoader() {\r\n        setLoader(true)\r\n    }\r\n    return <div className=\"wrapper\">\r\n        <div className=\"weather\">\r\n            <CurrentTime\r\n                address={address}\r\n                setLoader={actionLoader}\r\n                loader={loader}\r\n                status={data}\r\n                action={actionGetData}\r\n                clouds={clouds}\r\n                humidity={humidity}\r\n                sunset={setTime(sunset).hours + \":\" + setTime(sunset).minutes} feel={Math.round(feel - 273.15)}\r\n            />\r\n            <Foreacast\r\n                loader={loader}\r\n                dataDaily={daily}\r\n                status={data}\r\n                current={current} />\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport function setTime(unix) {\r\n    let timestamp = unix;\r\n    let a = new Date(timestamp * 1000);\r\n    let daysList = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let monthList = ['January', 'February', 'March', 'April', 'May', 'June', 'Jule', 'August', 'September', 'October', 'November', 'December']\r\n    let day = daysList[a.getDay()]\r\n    let month = monthList[a.getMonth()]\r\n    let dayNumber = a.getDate()\r\n    let year = a.getFullYear()\r\n    let fullDate = day + \", \" + dayNumber + \" \" + month + \" \" + year;\r\n    let hours = a.getHours()\r\n    let minutes = a.getMinutes()\r\n    let seconds = a.getSeconds()\r\n    if (hours < 10) {\r\n        hours = '0' + hours\r\n    }\r\n    if (minutes < 10) {\r\n        minutes = '0' + minutes\r\n    }\r\n    if (seconds < 10) {\r\n        seconds = '0' + seconds\r\n    }\r\n    return {\r\n        seconds: seconds,\r\n        minutes: minutes,\r\n        hours: hours,\r\n        day: day,\r\n        month: month,\r\n        year: year,\r\n        dayNumber: dayNumber,\r\n        fullDate: fullDate\r\n\r\n    }\r\n}\r\nfunction CurrentTime(props) {\r\n    const [unix, setUnix] = useState(Date.now() / 1000)\r\n    setInterval(function () {\r\n        setUnix(Date.now() / 1000)\r\n    }, 1000)\r\n    function getData(data, address) {\r\n        props.action(data, address)\r\n    }\r\n    return <div className=\"current\">\r\n        <div className=\"current__info-container\">\r\n            <div className=\"current__time\">\r\n                <p className=\"current__timestamp\"> {setTime(unix).hours}:{setTime(unix).minutes}<span className=\"current__seconds\">:{setTime(unix).seconds} </span></p>\r\n                <p className=\"current__day\">\r\n                    {setTime(Date.now() / 1000).fullDate}\r\n                </p>\r\n            </div>\r\n            <div className=\"current__info \">\r\n                {props.loader && <div className=\"current__loading\">\r\n                    Loading...\r\n                                <div className=\"current__icon-b \">\r\n                        <img src='./loader.png' className=\"current__icon animate__animated  animate__rotateOut\" alt=\"weather option\" />\r\n                    </div>\r\n                </div>\r\n                }\r\n                {!props.loader && props.status &&\r\n                    <>\r\n                        <CurrentInfoItem src=\"./humidity.png\" condition={props.humidity + \"%\"} text=\"humidity is\" />\r\n                        <CurrentInfoItem src=\"./cloud.png\" condition={props.clouds + \"%\"} text=\"clouds is \" />\r\n                        <CurrentInfoItem src=\"./feeling.png\" condition={props.feel + \" C\"} text=\"feels like \" />\r\n                        <CurrentInfoItem src=\"./sunset.png\" condition={props.sunset} text=\"sunset is\" />\r\n                    </>}\r\n            </div>\r\n        </div>\r\n        <div className=\"current__search\">\r\n            <LocationSearchInput action={getData} setLoader={props.setLoader} />\r\n            <div className=\"current__address\">\r\n                {props.address}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\nfunction CurrentInfoItem(props) {\r\n    return <div className=\"current__item animate__animated  animate__bounceInLeft\">\r\n        <div className=\"current__icon-b \">\r\n            <img src={props.src} className=\"current__icon\" alt=\"weather option\" />\r\n        </div>\r\n        <div className=\"current__text\"> {props.text} {props.condition} </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport './styles/App.scss';\r\nimport Wrapper from './components/Content'\r\n\r\nexport let apiKey = '&appid=ae64f4f04a5e48e2fc0edabf290d80d0'\r\nexport let originUrl = 'https://api.openweathermap.org/data/2.5/onecall?'\r\n\r\nexport default function App() {\r\n\r\n    return <>\r\n        <Wrapper />\r\n\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}